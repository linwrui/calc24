{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/cards-panel/cards-panel/cards-panel.component.html","webpack:///./src/app/components/cards-panel/cards-panel/cards-panel.component.less","webpack:///./src/app/components/cards-panel/cards-panel/cards-panel.component.ts","webpack:///./src/app/model/card-operator.m.ts","webpack:///./src/app/model/expression.m.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<div>\\n  <app-cards-panel></app-cards-panel>\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { CardOperator } from \"./model/card-operator.m\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.less\"]\n})\nexport class AppComponent {\n  title = \"game-calc24\";\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { CardsPanelComponent } from \"./components/cards-panel/cards-panel/cards-panel.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardsPanelComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  exports: [CardsPanelComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div>\\n  <input [value]=\\\"cards[0]\\\" (keyup)=\\\"cards[0]=$event.target.value\\\">\\n  <input [value]=\\\"cards[1]\\\" (keyup)=\\\"cards[1]=$event.target.value\\\">\\n  <input [value]=\\\"cards[2]\\\" (keyup)=\\\"cards[2]=$event.target.value\\\">\\n  <input [value]=\\\"cards[3]\\\" (keyup)=\\\"cards[3]=$event.target.value\\\">\\n  <button (click)=\\\"confirm()\\\">确定</button>\\n</div>\\n<div>\\n  <ul>{{outPut.message}}</ul>\\n  <ul *ngFor=\\\"let item of outPut.results\\\">{{item}}</ul>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2FyZHMtcGFuZWwvY2FyZHMtcGFuZWwvY2FyZHMtcGFuZWwuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { CardOperator } from \"src/app/model/card-operator.m\";\n\n@Component({\n  selector: \"app-cards-panel\",\n  templateUrl: \"./cards-panel.component.html\",\n  styleUrls: [\"./cards-panel.component.less\"]\n})\nexport class CardsPanelComponent {\n  public readonly cards: string[] = [\"0\", \"0\", \"0\", \"0\"];\n  public check = 24;\n  public outPut = {\n    results: [],\n    message: \"请输入数值后按确认键\"\n  };\n  confirm() {\n    this.outPut = new CardOperator(this.cards.map(x => Number.parseInt(x))).Operate(this.check);\n  }\n}\n","import { ExpressionOperator, Expressions } from \"./expression.m\";\r\n\r\nexport class CardOperator {\r\n  private readonly _cards: number[];\r\n  private readonly _threshold: any = 0.0000001;\r\n\r\n  constructor(cards: number[]) {\r\n    this._cards = cards;\r\n  }\r\n\r\n  /// <summary>\r\n  /// 对数组a所有可能的排列进行组合运算并返回运算的结果\r\n  /// </summary>\r\n  /// <param name=\"a\"></param>\r\n  /// <returns></returns>\r\n  public Operate(checkResult: number) {\r\n    const results = [];\r\n    for (let ai = 0; ai < this._cards.length; ai++) {\r\n      const a1 = this._cards[ai];\r\n      for (let bi = 0; bi < this._cards.length; bi++) {\r\n        if (bi !== ai) {\r\n          const a2 = this._cards[bi];\r\n          for (let ci = 0; ci < this._cards.length; ci++) {\r\n            if (ci !== ai && ci !== bi) {\r\n              const a3 = this._cards[ci];\r\n              for (let di = 0; di < this._cards.length; di++) {\r\n                if (di !== ai && di !== bi && di !== ci) {\r\n                  const a4 = this._cards[di];\r\n                  let tryOperate = this.OperateTwoTwo([a1, a2, a3, a4], checkResult);\r\n                  if (tryOperate.success) {\r\n                    if (!results.some(x => x === tryOperate.expression)) {\r\n                      console.log(tryOperate.expression);\r\n                      results.push(tryOperate.expression);\r\n                    }\r\n                    // return result;\r\n                  }\r\n                  tryOperate = this.OperateTreeOne([a1, a2, a3, a4], checkResult);\r\n                  if (tryOperate.success) {\r\n                    if (!results.some(x => x === tryOperate.expression)) {\r\n                      console.log(tryOperate.expression);\r\n                      results.push(tryOperate.expression);\r\n                    }\r\n                    // return result;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      results,\r\n      message: `计算完成，共有 ${results.length} 种运算方式。`\r\n    };\r\n  }\r\n\r\n  /// <summary>\r\n  /// (a1{Exp}a2){Exp}(a3{Exp}a4)\r\n  /// </summary>\r\n  /// <returns></returns>\r\n  private OperateTwoTwo(cards: number[], checkResult: number) {\r\n    const a12: ExpressionOperator[] = this.Operates(cards[0], cards[1]);\r\n    const a34: ExpressionOperator[] = this.Operates(cards[2], cards[3]);\r\n    for (const a of a12) {\r\n      for (const b of a34) {\r\n        const ab: ExpressionOperator[] = this.Operates(a.GetResult(), b.GetResult());\r\n        for (const h of ab) {\r\n          if (h < this._threshold) {\r\n            return {\r\n              expression: h.GetExpressionString(a.FinalExpressionString(), b.FinalExpressionString()) + `=${h.GetResult()}`,\r\n              success: true\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      expression: undefined,\r\n      success: false\r\n    };\r\n  }\r\n\r\n  /// <summary>\r\n  /// (a1{Exp}a2{Exp}a3){Exp}a4\r\n  /// </summary>\r\n  /// <returns></returns>\r\n  private OperateTreeOne(cards: number[], checkResult: number) {\r\n    const a12: ExpressionOperator[] = this.Operates(cards[0], cards[1]); // (a1{Exp}a2{Exp}a3){Exp}a4\r\n    for (const a of a12) {\r\n      const a123: ExpressionOperator[] = this.Operates(a.GetResult(), cards[2]);\r\n      for (const b of a123) {\r\n        const ab: ExpressionOperator[] = this.Operates(b.GetResult(), cards[3]);\r\n        for (const c of ab) {\r\n          if (Math.abs(c.GetResult() - checkResult) < this._threshold) {\r\n            return {\r\n              expression: c.GetExpressionString(b.GetExpressionString(a.FinalExpressionString(), b.Num_b), cards[3]) + `=${c.GetResult()}`,\r\n              success: true\r\n            };\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      expression: \"\",\r\n      success: false\r\n    };\r\n  }\r\n\r\n  /// <summary>\r\n  /// 运算两个数的四则运算并将结果作为一个数组返回\r\n  /// </summary>\r\n  /// <param name=\"num_a\">The number a.</param>\r\n  /// <param name=\"num_b\">The number b.</param>\r\n  /// <returns></returns>\r\n  private Operates(numA: number, numB: number): ExpressionOperator[] {\r\n    return [\r\n      new ExpressionOperator(numA, numB, Expressions.Addition),\r\n      new ExpressionOperator(numA, numB, Expressions.Subtraction),\r\n      new ExpressionOperator(numA, numB, Expressions.NSubtraction),\r\n      new ExpressionOperator(numA, numB, Expressions.Multiplication),\r\n      new ExpressionOperator(numA, numB, Expressions.Division),\r\n      new ExpressionOperator(numA, numB, Expressions.NDivision),\r\n    ];\r\n  }\r\n}\r\n","export enum Expressions {\r\n  /// <summary>\r\n  /// 加法(a+b)\r\n  /// </summary>\r\n  Addition,\r\n\r\n  /// <summary>\r\n  /// 减法(a-b)\r\n  /// </summary>\r\n  Subtraction,\r\n\r\n  /// <summary>\r\n  /// 减法(b-a)\r\n  /// </summary>\r\n  NSubtraction,\r\n\r\n  /// <summary>\r\n  /// 乘法(a*b)\r\n  /// </summary>\r\n  Multiplication,\r\n\r\n  /// <summary>\r\n  /// 除法(a/b)\r\n  /// </summary>\r\n  Division,\r\n\r\n  /// <summary>\r\n  /// 除法(b/a)\r\n  /// </summary>\r\n  NDivision\r\n}\r\nexport class ExpressionOperator {\r\n  /// <summary>\r\n  /// Gets the number left.\r\n  /// </summary>\r\n  /// <value>\r\n  /// The number left.\r\n  /// </value>\r\n  public get Num_left() {\r\n    switch (this._expression) {\r\n      case Expressions.NDivision:\r\n      case Expressions.NSubtraction: return this._b;\r\n      default: return this._a;\r\n    }\r\n  }\r\n\r\n  /// <summary>\r\n  /// Gets the number right.\r\n  /// </summary>\r\n  /// <value>\r\n  /// The number right.\r\n  /// </value>\r\n  public get Num_right() {\r\n    switch (this._expression) {\r\n      case Expressions.NDivision:\r\n      case Expressions.NSubtraction: return this._a;\r\n      default: return this._b;\r\n    }\r\n  }\r\n\r\n  /// <summary>\r\n  /// Gets the number b.\r\n  /// </summary>\r\n  /// <value>\r\n  /// The number b.\r\n  /// </value>\r\n  public get Num_b() { return this._b; }\r\n\r\n  /// <summary>\r\n  /// Gets the number a.\r\n  /// </summary>\r\n  /// <value>\r\n  /// The number a.\r\n  /// </value>\r\n  public get Num_a() { return this._a; }\r\n  private readonly _a: number;\r\n  private readonly _b: number;\r\n  private readonly _expression: Expressions;\r\n\r\n  /// <summary>\r\n  /// Initializes a new instance of the <see cref=\"ExpressionOperator\"/> class.\r\n  /// </summary>\r\n  /// <param name=\"num_a\">The number a.</param>\r\n  /// <param name=\"num_b\">The number b.</param>\r\n  /// <param name=\"expression\">The expression.</param>\r\n  constructor(numA: number, numB: number, expression: Expressions) {\r\n    this._a = numA;\r\n    this._b = numB;\r\n    this._expression = expression;\r\n  }\r\n\r\n  /// <summary>\r\n  /// Gets the result.\r\n  /// </summary>\r\n  /// <returns></returns>\r\n  public GetResult(): number {\r\n    switch (this._expression) {\r\n      case Expressions.Addition: return this._a + this._b;\r\n      case Expressions.Subtraction: return this._a - this._b;\r\n      case Expressions.NSubtraction: return this._b - this._a;\r\n      case Expressions.Multiplication: return this._a * this._b;\r\n      case Expressions.Division: return this._b === 0 ? Number.NaN : this._a / this._b;\r\n      case Expressions.NDivision: return this._a === 0 ? Number.NaN : this._b / this._a;\r\n      default: return Number.NaN;\r\n    }\r\n  }\r\n\r\n  /// <summary>\r\n  /// Returns a <see cref=\"System.String\" /> that represents this instance.\r\n  /// </summary>\r\n  /// <returns>\r\n  /// A <see cref=\"System.String\" /> that represents this instance.\r\n  /// </returns>\r\n  public ToString(): string {\r\n    return `${this.FinalExpressionString()}=${this.GetResult()}`;\r\n  }\r\n\r\n  /// <summary>\r\n  /// Gets the expression string.\r\n  /// </summary>\r\n  /// <returns></returns>\r\n  public FinalExpressionString() { return this.GetExpressionString(this._a, this._b); }\r\n\r\n  /// <summary>\r\n  /// Gets the expression string.\r\n  /// </summary>\r\n  /// <param name=\"left\">The left.</param>\r\n  /// <param name=\"right\">The right.</param>\r\n  /// <returns></returns>\r\n  public GetExpressionString(left: any, right: any) {\r\n    left = typeof left === \"string\" ? `(${left})` : left;\r\n    right = typeof right === \"string\" ? `(${right})` : right;\r\n    switch (this._expression) {\r\n      case Expressions.Addition: return `${left}+${right}`;\r\n      case Expressions.Subtraction: return `${left}-${right}`;\r\n      case Expressions.NSubtraction: return `${right}-${left}`;\r\n      case Expressions.Multiplication: return `${left}*${right}`;\r\n      case Expressions.Division: return `${left}/${right}`;\r\n      case Expressions.NDivision: return `${right}/${left}`;\r\n      default: return \"\";\r\n    }\r\n\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}